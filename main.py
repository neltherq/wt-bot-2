# main.py
import os
import asyncio
import logging
from dotenv import load_dotenv
from app.handlers.accounts_admin import router as accounts_admin_router
from app.handlers.warthunder import router as warthunder_router
from app.handlers.change_admin import router as change_admin_router

# 1) –°–Ω–∞—á–∞–ª–∞ –≥—Ä—É–∑–∏–º .env, —á—Ç–æ–±—ã ADMIN_USERNAMES –∏ –ø—Ä–æ—á–µ–µ –ø–æ–¥—Ö–≤–∞—Ç–∏–ª–æ—Å—å –≤ —Ö–µ–Ω–¥–ª–µ—Ä–∞—Ö
load_dotenv()

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import BotCommand  # üëà –¥–æ–±–∞–≤–∏–ª–∏

from app.db import init_db
from app.middlewares.debounce import DebounceMiddleware

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã –Ω–∞–ø—Ä—è–º—É—é, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç __init__.py
from app.handlers.menu import router as menu_router
from app.handlers.profile import router as profile_router
from app.handlers.balance import router as balance_router
from app.handlers.deposit import router as deposit_router
from app.handlers.admin import router as admin_router
from app.handlers.errors import router as errors_router
from app.handlers.stats_admin import router as stats_admin_router

# ------------------ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ------------------
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s",
)
logging.getLogger("aiogram").setLevel(logging.INFO)
logging.getLogger("httpx").setLevel(logging.INFO)

# ------------------ –ë–æ—Ç / –î–∏—Å–ø–µ—Ç—á–µ—Ä ------------------
BOT_TOKEN = os.getenv("BOT_TOKEN", "")

bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# –î–µ–±–∞—É–Ω—Å: –æ—Ç–≤–µ—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π –∞–ø–¥–µ–π—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ—Ä–æ—Ç–∫–æ–º –æ–∫–Ω–µ
dp.update.middleware(DebounceMiddleware(window_ms=600))  # –ø–æ–¥–±–µ—Ä–∏ 400‚Äì800 –º—Å –ø–æ –æ—â—É—â–µ–Ω–∏—è–º

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(menu_router)     # –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –º–∞–≥–∞–∑–∏–Ω
dp.include_router(profile_router)  # –ø—Ä–æ—Ñ–∏–ª—å
dp.include_router(balance_router)  # –±–∞–ª–∞–Ω—Å
dp.include_router(deposit_router)  # –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (lolz)
dp.include_router(admin_router)    # –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã (–¥–∞—Ç—å/–∑–∞–±—Ä–∞—Ç—å)
dp.include_router(errors_router)   # –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
dp.include_router(accounts_admin_router)
dp.include_router(warthunder_router)
dp.include_router(change_admin_router)
dp.include_router(stats_admin_router)

# ------------------ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ (–∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é) ------------------
async def set_default_commands(bot: Bot):
    commands = [
        BotCommand(command="start", description="Restart bot ü§ñ"),
        # –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:
        # BotCommand(command="menu", description="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        # BotCommand(command="balance", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å"),
    ]
    await bot.set_my_commands(commands)

# ------------------ –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ------------------
async def main():
    if not BOT_TOKEN:
        raise RuntimeError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

    await init_db()

    # –£—Å—Ç–∞–Ω–æ–≤–∏–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    await set_default_commands(bot)

    # –í–∞—Ä–∏–∞–Ω—Ç —Ä–∞–¥–∏–∫–∞–ª—å–Ω—ã–π (—É–¥–∞–ª–∏—Ç –í–°–ï –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –∞–ø–¥–µ–π—Ç—ã —É Telegram-—Å–µ—Ä–≤–µ—Ä–∞):
    # await bot.delete_webhook(drop_pending_updates=True)

    # –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ aiogram 3 –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç skip_updates=True (–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ):
    # await dp.start_polling(bot, skip_updates=True)

    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
